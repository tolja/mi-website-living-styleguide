{
    "title":"Theoretische Informatik 2",
	"modulverantwortlich": "me",
	"modulniveau": "<no value>",
	"kuerzel": "TI2",
	"studiensemester": "2",
	"sprache": "deutsch",
	"kreditpunkte": "5",
	"voraussetzungen-nach-pruefungsordnung": "<no value>",
	"empfohlene-voraussetzungen": "<no value>",
	"published": "<no value>",
	"type": "pm",
    "content": ""## Lehrform/SWS\n4 SWS: Vorlesung 2 SWS; Übung 2 SWS\n\n## Arbeitsaufwand\nGesamtaufwand 150h, davon\n- 36h Vorlesung\n- 36h Übung\n- 78h Selbstlernphase\n\n## Angestrebte Lernergebnisse\nsiehe Theoretische Informatik 1.\n\n## Inhalt\n- Reguläre (Typ-3) Sprachen: Endliche Automaten, Reguläre Ausdrücke; Typ3-Grammatiken, Syntaxdiagramme; Chomsky-Hierarchie\n- Modellierung sequentieller und paralleler (Ausgabe-) Prozesse: Endliche Maschinen, Berechnungen; Automatennetze, Petri-Netze, Zelluläre Automaten\n- Kontextfreie (Typ-2) Sprachen: Kontextfreie Grammatiken, Chomsky- und Greibach-Normalform; Kellerautomaten; Anwendungen (Ableitungs- und Syntaxbäume, Syntax von Programmiersprachen, Backus-Naur-Form)\n- Kontextsensitive (Typ-1) und rekursiv aufzählende (Typ-0) Sprachen: Grammatiken, Monotonie, Normalform; Turingautomaten; Einführung in die Begriffe: Berechenbarkeit, Entscheidbarkeit und Komplexität\n\n\n## Studien-/Prüfungsleistungen\nSchriftliche Prüfung.\n\n## Literatur\n- Hoffmann, D. (2011): Theoretische Informatik, 2. Auflage\n- Vossen, G., Witt K. (2004): Grundlagen der Theoretischen Informatik mit Anwendungen. 3. Aufl.  Vieweg \u0026 Sohn, Braunschweig.\n- Hedtstück, U. ( 2004 ): Einführung in die Theoretische Informatik. Oldenbourg, München.\n- Asteroth, A., Baier, C. (2002) Theoretische Informatik. Pearson Studium München\n- Hopcroft, J. E.  et al. (2002): Einführung in die Automatentheorie, Formale Sprachen und Komplexitätstheorie. Pearson Studium, München.\n- Schöning, U. (1997): Theoretische Informatik - kurzgefaßt. 3. Aufl. Spektrum Akademischer Verlag, Heidelberg.\n"",
}
